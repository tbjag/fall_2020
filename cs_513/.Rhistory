data
wisc_data
wisc_data
wisc_data = read.csv("School/fall_2020/cs_513/breast-cancer-wisconsin.data.csv")
View(wisc_data)
view(wisc_data)
wisc_data = read.csv("School/fall_2020/cs_513/breast-cancer-wisconsin.data.csv")
view(wisc_data)
View(wisc_data)
wisc_data = read.csv("School/fall_2020/cs_513/breast-cancer-wisconsin.data.csv")
View(wisc_data)
summary(wisc_data)
View(wisc_data)
is.na(wisc_data)
which(is.na(wisc_data))
summary(is.na(wisc_data))
View(wisc_data)
wisc_data[ wisc_data == "?" ] <- NA
summary(is.na(wisc_data)) #there are no missing vals
which(is.na(wisc_data)) #would be used to find the positions of missing vals.
for(i in 1:ncol(wisc_data)){
data[is.na(wisc_data[,i]), i] <- mean(wisc_data[,i], na.rm = TRUE)
}
library(imputeTS)
wisc_data[sapply(wisc_data, is.numeric)] <- lapply(wisc_data[sapply(wisc_data, is.numeric)], function(x) ifelse(is.na(x), mean(x, na.rm = TRUE), x))
View(wisc_data)
wisc_data = read.csv("School/fall_2020/cs_513/breast-cancer-wisconsin.data.csv") #load in from csv
View(wisc_data) #look at data
summary(wisc_data) #show discriptive stats
wisc_data[ wisc_data == "?" ] <- NA
summary(is.na(wisc_data)) #there are no missing vals
#only in the F6 column there are missing vals
#since we know that only f6 is impacted we replace the mean only  there
wisc_data[sapply(wisc_data, is.numeric)] <- lapply(wisc_data[sapply(wisc_data, is.numeric)], function(x) ifelse(is.na(x), mean(x, na.rm = TRUE), x))
View(wisc_data)
wisc_data$F6[wisc_data$is.na(F6)] <- mean(wisc_data$F6)
mean(wisc_data$F6)
mean(wisc_data$F6)
#since we know that only f6 is impacted we replace the mean only there
mean(wisc_data$F6, na.rm = TRUE)
#since we know that only f6 is impacted we replace the mean only there
mean(wisc_data$F6, na.rm = TRUE)
View(wisc_data)
#since we know that only f6 is impacted we replace the mean only there
lapply(wisc_data$F6, mean, na.rm = TRUE)
#since we know that only f6 is impacted we replace the mean only there
colMeans(wisc_data$F6, na.rm = TRUE)
#since we know that only f6 is impacted we replace the mean only there
colMeans(wisc_data, na.rm = TRUE)
#since we know that only f6 is impacted we replace the mean only there
colMeans(x=wisc_data, na.rm = TRUE)
summary(wisc_data) #show discriptive stats
summary(wisc_data, na.rm = TRUE) #show discriptive stats
wisc_data = read.csv("School/fall_2020/cs_513/breast-cancer-wisconsin.data.csv") #load in from csv
View(wisc_data) #look at data
wisc_data[ wisc_data == "?" ] <- NA
summary(wisc_data, na.rm = TRUE) #show discriptive stats
summary(is.na(wisc_data)) #there are no missing vals
#only in the F6 column there are missing vals
list_na <- c("F6")
#since we know that only f6 is impacted we replace the mean only there
average_missing <- apply(wisc_data[,colnames(wisc_data) %in% list_na], 2, mean, na.rm =  TRUE)
#only in the F6 column there are missing vals
list_na <- colnames(wisc_data)[ apply(wisc_data, 2, anyNA) ]
#since we know that only f6 is impacted we replace the mean only there
average_missing <- apply(wisc_data[,colnames(wisc_data) %in% list_na], 2, mean, na.rm =  TRUE)
View(data)
wisc_data$F6[which(is.na(wisc_data$F6))] <- 0
wisc_data = read.csv("School/fall_2020/cs_513/breast-cancer-wisconsin.data.csv") #load in from csv
View(wisc_data) #look at data
wisc_data[ wisc_data == "?" ] <- NA
summary(is.na(wisc_data)) #there are no missing vals
wisc_data$F6[which(is.na(wisc_data$F6))] <- 0
mean(wisc_data$F2)
mean(wisc_data$F6)
mean(wisc_data$F6,  na.rm = TRUE)
summary(is.na(wisc_data)) #there are no missing vals
#only in the F6 column there are missing vals
sapply(my.data, typeof)
#only in the F6 column there are missing vals
sapply(wisc_data, typeof)
mean(as.integer(wisc_data$F6),  na.rm = TRUE)
#only in the F6 column there are missing vals
mean_F6 = mean(as.integer(wisc_data$F6),  na.rm = TRUE)
wisc_data$F6[which(is.na(as.integer(wisc_data$F6)))] <- mean_F6
wisc_data$F6[which(is.na(wisc_data$F6))] <- mean_F6
wisc_data$F6[wisc_data$F6 == NA] <- mean_F6
wisc_data$F6[ wisc_data$F6 == NA] <- mean_F6
wisc_data$F6[ is.na(wisc_data$F6)] <- mean_F6
wisc_data$F6[ is.na(wisc_data$F6)]
wisc_data$F6[ is.na(as.integer(wisc_data$F6))]
replace.value( wisc_data, c("F6"), from=NA, to=mean_F6, verbose = FALSE)
for(i in 1:ncol(wisc_data)){
wisc_data[is.na(wisc_data[,i]), i] <- mean(as.integer(wisc_data[,i]), na.rm = TRUE)
}
rm(list=ls())
wisc_data = read.csv("School/fall_2020/cs_513/breast-cancer-wisconsin.data.csv") #load in from csv
View(wisc_data) #look at data
summary(wisc_data, na.rm = TRUE) #show discriptive stats
wisc_data[ wisc_data == "?" ] <- NA
df<- data.frame(wisc_data)
summary(is.na(df)) #there are no missing vals
summary(df)
View(df)
sum(is.na(df))
#only in the F6 column there are missing vals
for(i in 1:ncol(wisc_data)){
wisc_data[is.na(wisc_data[,i]), i] <- mean(as.integer(wisc_data[,i]), na.rm = TRUE)
}
colSums(is.na(df))
#only in the F6 column there are missing vals
installed.packages()
# install package modeest which can be used to calculate mode of data
install.packages("modeest")
# load the library modeest
library(modeest)
# calculate the mode of data for F6 column
F6_mlv<-mlv(df$F6,method = "mfv",na.rm = TRUE)
F6_mlv
F6_mlv$M
# replacin
df$F6[is.na(df$F6)] <- F6_mlv$M
for(i in 1:ncol(df)){
df[is.na(df[,i]), i] <- mean(df[,i], na.rm = TRUE)
}
for(i in 1:ncol(df)){
df[is.na(df[,i]), i] <- mean(as.integer(df[,i]), na.rm = TRUE)
}
#Load the “breast-cancer-wisconsin.data.csv” from canvas into R and perform the EDA analysis
dataSet <- read.csv("School/fall_2020/cs_513/breast-cancer-wisconsin.data.csv", na.string = "?")
#Load the “breast-cancer-wisconsin.data.csv” from canvas into R and perform the EDA analysis
rm(list=ls())
dataSet <- read.csv("School/fall_2020/cs_513/breast-cancer-wisconsin.data.csv", na.string = "?")
#Summarizing each column
summary(dataSet)
#Replace ? with NA for simplicity
dataSet[,1:11][dataSet[,1:11]=="?"] <- NA
#Identifying missing values
is.na(dataSet)
View(dataSet)
#Replacing the missing values with the “mean” of the column.
for(i in 1:ncol(dataSet)){
dataSet[is.na(dataSet[,i]), i] <- mean(dataSet[,i], na.rm = TRUE)
}
#Rounding Values to first 2 decimal for simplicity
dataSet[,-1] <-round(dataSet[,-1],2)
#Displaying the frequency table of “Class” vs. F6
myTable <- table(dataSet$Class, dataSet$F6)
ftable(myTable)
#remove global vars
rm(list=ls())
#doing part 2 right here
wisc_data <- read.csv("School/fall_2020/cs_513/breast-cancer-wisconsin.data.csv", na.string = "?")
#put into dataframe
df<- data.frame(wisc_data)
#find the NA in the cols
colSums(is.na(df))
#find the NA in the cols
colSums(is.na(df))
# Replacing the missing values with the "mode" (most frequent value) of the column F6.
# check for installed packages for modeest package.
installed.packages()
# install package modeest which can be used to calculate mode of data
install.packages("modeest")
install.packages("modeest")
# load the library modeest
library(modeest)
# calculate the mode of data for F6 column
F6_mlv<-mlv(df$F6,method = "mfv",na.rm = TRUE)
F6_mlv
F6_mlv$M
#remove global vars
rm(list=ls())
#doing part 2 right here
wisc_data <- read.csv("School/fall_2020/cs_513/breast-cancer-wisconsin.data.csv", na.string = "?")
#put into dataframe
df<- data.frame(wisc_data)
#find the NA in the cols
colSums(is.na(df))
#find the NA in the cols
colSums(is.na(df))
#Replacing the missing values with the “mean” of the column.
for(i in 1:ncol(df)){
df[is.na(df[,i]), i] <- mean(df[,i], na.rm = TRUE)
}
#Displaying the frequency table of “Class” vs. F6
myTable <- table(dataSet$Class, dataSet$F6)
#Displaying the frequency table of “Class” vs. F6
myTable <- table(df$Class, df$F6)
ftable(myTable)
#Displaying the scatter plot of F1 to F6, one pair at a time
plot(dataSet[2:7], main = "Scatter Plot of F1 to F6", ph = 10, col = 2)
#Displaying the scatter plot of F1 to F6, one pair at a time
plot(df[2:7], main = "Scatter Plot of F1 to F6", ph = 10, col = 2)
#Show histogram box plot for columns F7 to F9
boxplot(dataSet[8:10], main = "Histogram Box Plot for Columns F7 to F9")
#Show histogram box plot for columns F7 to F9
boxplot(df[8:10], main = "Histogram Box Plot for Columns F7 to F9")
#Show histogram box plot for columns F7 to F9
boxplot(df[8:10])
#remove global vars
rm(list=ls())
cancerData_missing<-na.omit(wisc_data)
#remove global vars
rm(list=ls())
wisc_data <- read.csv("School/fall_2020/cs_513/breast-cancer-wisconsin.data.csv", na.string = "?")
cancerData_missing<-na.omit(wisc_data)
#Displaying the scatter plot of F1 to F6, one pair at a time
plot(df[2:7], main = "Scatter Plot of F1 to F6", ph = 10, col = 2)
#remove global vars
rm(list=ls())
#doing part 2 right here
wisc_data <- read.csv("School/fall_2020/cs_513/breast-cancer-wisconsin.data.csv", na.string = "?")
#put into dataframe
df<- data.frame(wisc_data)
#find the NA in the cols
colSums(is.na(df))
#Replacing the missing values with the “mean” of the column.
for(i in 1:ncol(df)){
df[is.na(df[,i]), i] <- mean(df[,i], na.rm = TRUE)
}
#Displaying the frequency table of “Class” vs. F6
myTable <- table(df$Class, df$F6)
ftable(myTable)
#Displaying the scatter plot of F1 to F6, one pair at a time
plot(df[2:7], main = "Scatter Plot of F1 to F6", ph = 10, col = 2)
#Show histogram box plot for columns F7 to F9
boxplot(df[8:10])
#remove global vars
rm(list=ls())
wisc_data <- read.csv("School/fall_2020/cs_513/breast-cancer-wisconsin.data.csv", na.string = "?")
omitted_data<-na.omit(wisc_data)
#remove global vars
rm(list=ls())
#doing part 2 right here
wisc_data <- read.csv("School/fall_2020/cs_513/breast-cancer-wisconsin.data.csv", na.string = "?")
#put into dataframe
df<- data.frame(wisc_data)
View(df)
#find the NA in the cols
colSums(is.na(df))
#Replacing the missing values with the “mean” of the column.
for(i in 1:ncol(df)){
df[is.na(df[,i]), i] <- mean(df[,i], na.rm = TRUE)
}
#Displaying the frequency table of “Class” vs. F6
temp_table <- table(df$Class, df$F6)
ftable(temp_table)
View(df)
#Displaying the frequency table of “Class” vs. F6
temp_table <- table(df$Class, df$F6)
ftable(temp_table)
#Displaying the scatter plot of F1 to F6, one pair at a time
plot(df[2:7], main = "Scatter Plot of F1 to F6", ph = 10, col = 2)
#Show histogram box plot for columns F7 to F9
boxplot(df[8:10])
#remove global vars
rm(list=ls())
wisc_data <- read.csv("School/fall_2020/cs_513/breast-cancer-wisconsin.data.csv", na.string = "?")
omitted_data<-na.omit(wisc_data)
View(omitted_data)
# set working directory
setwd('C:\Users\Theo\Documents\School\fall_2020\cs_513')
# set working directory
setwd('C:\\Users\\Theo\\Documents\\School\\fall_2020\\cs_513')
cancerData <- read.csv('breastCancerWisconsinData.csv',na.string="?")
#clear environment
rm(list=ls())
cancerData <- read.csv('C:\\Users\\Theo\\Documents\\School\\fall_2020\\cs_513\\breastCancerWisconsinData.csv',na.string="?")
#clear environment
rm(list=ls())
cancerData <- read.csv('C:\\Users\\Theo\\Documents\\School\\fall_2020\\cs_513\\breast-cancer-wisconsin.data.csv',na.string="?")
#clear environment
rm(list=ls())
cancer_data <- read.csv('C:\\Users\\Theo\\Documents\\School\\fall_2020\\cs_513\\breast-cancer-wisconsin.data.csv',na.string="?")
#clear environment
rm(list=ls())
#read in data
cancer_data <- read.csv('C:\\Users\\Theo\\Documents\\School\\fall_2020\\cs_513\\breast-cancer-wisconsin.data.csv',na.string="?")
# View data
View(cancerData)
# Remove any row with a missing value in any of the columns.
cancer_data<-na.omit(cancerData)
# Remove any row with a missing value in any of the columns.
cancer_data<-na.omit(cancer_data)
View(cancer_data)
table(cancer_data)
table(cancer_data$Class)
runif(5)
#get uniform distributiom
gp <- runif(nrows(cancer_data))
#get uniform distributiom
gp <- runif(nrow(cancer_data))
#shuffle
cancer_data <- cancer_data[order(gp),]
View(cancer_data)
#clear environment
rm(list=ls())
#read in data
cancer_data <- read.csv('C:\\Users\\Theo\\Documents\\School\\fall_2020\\cs_513\\breast-cancer-wisconsin.data.csv',na.string="?")
# View data
View(cancer_data)
# Remove any row with a missing value in any of the columns.
cancer_data<-na.omit(cancer_data)
#drop sample number
drops <- c("Sample")
cancer_data[ , !(names(DF) %in% drops)]
cancer_data[ , !(names(cancer_data) %in% drops)]
#clear environment
rm(list=ls())
#read in data
cancer_data <- read.csv('C:\\Users\\Theo\\Documents\\School\\fall_2020\\cs_513\\breast-cancer-wisconsin.data.csv',na.string="?")
# View data
View(cancer_data)
# Remove any row with a missing value in any of the columns.
cancer_data<-na.omit(cancer_data)
#drop sample number
drops <- c("Sample")
cancer_data <- cancer_data[ , !(names(cancer_data) %in% drops)]
#view target numbers
table(cancer_data$Class)
#change random seed so that it is reproducible
set.seed(1999)
#get uniform distributiom
gp <- runif(nrow(cancer_data))
#shuffle
cancer_data <- cancer_data[order(gp),]
str(cancer_data)
#you can see in the cancer_data that it is now mixes
head(cancer_data)
cancer_data$Class <- as.factor(cancer_data$Class)
str(cancer_data)
#clear environment
rm(list=ls())
#read in data
cancer_data <- read.csv('C:\\Users\\Theo\\Documents\\School\\fall_2020\\cs_513\\breast-cancer-wisconsin.data.csv',na.string="?")
# View data
View(cancer_data)
# Remove any row with a missing value in any of the columns.
cancer_data<-na.omit(cancer_data)
#drop sample number
drops <- c("Sample")
cancer_data <- cancer_data[ , !(names(cancer_data) %in% drops)]
#change to 'Class' target to a factor
cancer_data$Class <- as.factor(cancer_data$Class)
#view target numbers
table(cancer_data$Class)
levels(cancer_data)[levels(cancer_data)==2] <- "benign"
cancer_data[cancer_data$Class == 2] <- "benign"
levels(cancer_data$Class)[levels(cancer_data$Class)==2] <- "benign"
View(cancer_data)
#clear environment
rm(list=ls())
#read in data
cancer_data <- read.csv('C:\\Users\\Theo\\Documents\\School\\fall_2020\\cs_513\\breast-cancer-wisconsin.data.csv',na.string="?")
# View data
View(cancer_data)
# Remove any row with a missing value in any of the columns.
cancer_data<-na.omit(cancer_data)
#drop sample number
drops <- c("Sample")
cancer_data <- cancer_data[ , !(names(cancer_data) %in% drops)]
#change to 'Class' target to a factor
cancer_data$Class <- as.factor(cancer_data$Class)
#change numbers to names
levels(cancer_data$Class)[levels(cancer_data$Class)==2] <- "benign"
levels(cancer_data$Class)[levels(cancer_data$Class)==4] <- "malignant"
#view target numbers
table(cancer_data$Class)
#change random seed so that it is reproducible
set.seed(1999)
#get uniform distributiom
gp <- runif(nrow(cancer_data))
#shuffle
cancer_data <- cancer_data[order(gp),]
#you can see in the cancer_data that it is now mixes
head(cancer_data)
#look at distribution
summary(cancer_data)
#look at distribution
summary(cancer_data, c(1,2,3,4,5,6,7,8,9))
#look at distribution
summary(cancer_data[,c(1,2,3,4,5,6,7,8,9)])
#define normalize
normalize <- function(x){
return( (x-min(x)) / (max(x) - min(x)) )
}
cancer_data_n <- as.data.frame(lapply(cancer_data[,c(1,2,3,4,5,6,7,8,9)], normalize))
clear
nrow(cancer_data_n)
nrow(cancer_data_n) * .7
as.integer(nrow(cancer_data_n) * .7)
train_number = as.integer(nrow(cancer_data_n) * .7)
cancer_data_train <- cancer_data_n[1:train_number, ]
total_rows = nrow(cancer_data_n)
train_number = as.integer(total_rows * .7)
test_number = total_rows - train_number
cancer_data_train <- cancer_data_n[1:train_number, ]
cancer_data_test <- cancer_data_n[train_number: total_rows, ]
total_rows = nrow(cancer_data_n)
train_number = as.integer(total_rows * .7)
cancer_data_train <- cancer_data_n[1:train_number - 1, ]
cancer_data_test <- cancer_data_n[train_number: total_rows, ]
require(class)
library(class);
install.packages("class")
#clear environment
rm(list=ls())
#read in data
cancer_data <- read.csv('C:\\Users\\Theo\\Documents\\School\\fall_2020\\cs_513\\breast-cancer-wisconsin.data.csv',na.string="?")
# View data
View(cancer_data)
# Remove any row with a missing value in any of the columns.
cancer_data<-na.omit(cancer_data)
#drop sample number
drops <- c("Sample")
cancer_data <- cancer_data[ , !(names(cancer_data) %in% drops)]
#change to 'Class' target to a factor
cancer_data$Class <- as.factor(cancer_data$Class)
#change numbers to names
levels(cancer_data$Class)[levels(cancer_data$Class)==2] <- "benign"
levels(cancer_data$Class)[levels(cancer_data$Class)==4] <- "malignant"
#view target numbers
table(cancer_data$Class)
#change random seed so that it is reproducible
set.seed(1999)
#get uniform distributiom
gp <- runif(nrow(cancer_data))
#shuffle
cancer_data <- cancer_data[order(gp),]
head(cancer_data)
#look at distribution
summary(cancer_data[,c(1,2,3,4,5,6,7,8,9)])
#define normalize
normalize <- function(x){
return( (x-min(x)) / (max(x) - min(x)) )
}
#preprocessing
cancer_data_n <- as.data.frame(lapply(cancer_data[,c(1,2,3,4,5,6,7,8,9)], normalize))
total_rows = nrow(cancer_data_n)
train_number = as.integer(total_rows * .7)
cancer_data_train <- cancer_data_n[1:train_number - 1, ]
cancer_data_test <- cancer_data_n[train_number: total_rows, ]
cancer_data_train_target <- cancer_data[1:train_number - 1, 10]
cancer_data_test_target <- cancer_data[train_number: total_rows, 10]
install.packages("class")
#build models for 3, 5, 10
model_3 <- knn(train=cancer_data_train, test=cancer_data_test, cl=cancer_data_train_target, k=3)
require("class")
#build models for 3, 5, 10
model_3 <- knn(train=cancer_data_train, test=cancer_data_test, cl=cancer_data_train_target, k=3)
model_3
#build models for 3, 5, 10
model_k3 <- knn(train=cancer_data_train, test=cancer_data_test, cl=cancer_data_train_target, k=3)
table(cancer_data_test_target, model_k3)
table(cancer_data_test_target, model_k3)
#clear environment
rm(list=ls())
#read in data
cancer_data <- read.csv('C:\\Users\\Theo\\Documents\\School\\fall_2020\\cs_513\\breast-cancer-wisconsin.data.csv',na.string="?")
# View data
View(cancer_data)
# Remove any row with a missing value in any of the columns.
cancer_data<-na.omit(cancer_data)
#drop sample number
drops <- c("Sample")
cancer_data <- cancer_data[ , !(names(cancer_data) %in% drops)]
#change to 'Class' target to a factor
cancer_data$Class <- as.factor(cancer_data$Class)
#change numbers to names
levels(cancer_data$Class)[levels(cancer_data$Class)==2] <- "benign"
levels(cancer_data$Class)[levels(cancer_data$Class)==4] <- "malignant"
#view target numbers
table(cancer_data$Class)
#change random seed so that it is reproducible
set.seed(1999)
#get uniform distributiom
gp <- runif(nrow(cancer_data))
#shuffle
cancer_data <- cancer_data[order(gp),]
head(cancer_data)
#look at distribution
summary(cancer_data[,c(1,2,3,4,5,6,7,8,9)])
#define normalize
normalize <- function(x){
return( (x-min(x)) / (max(x) - min(x)) )
}
#preprocessing
cancer_data_n <- as.data.frame(lapply(cancer_data[,c(1,2,3,4,5,6,7,8,9)], normalize))
#numbers for rows for train and test
total_rows = nrow(cancer_data_n)
train_number = as.integer(total_rows * .7)
cancer_data_train <- cancer_data_n[1:train_number - 1, ]
cancer_data_test <- cancer_data_n[train_number: total_rows, ]
cancer_data_train_target <- cancer_data[1:train_number - 1, 10]
cancer_data_test_target <- cancer_data[train_number: total_rows, 10]
#install KNN
install.packages("class")
install.packages("class")
require("class")
#for k = 3
model_k3 <- knn(train=cancer_data_train, test=cancer_data_test, cl=cancer_data_train_target, k=3)
#can see from table it predicted 5 wrong
table(cancer_data_test_target, model_k3)
#for k = 3
model_k5 <- knn(train=cancer_data_train, test=cancer_data_test, cl=cancer_data_train_target, k=5)
#can see from table it predicted 5 wrong
table(cancer_data_test_target, model_k5)
#for k = 3
model_k10 <- knn(train=cancer_data_train, test=cancer_data_test, cl=cancer_data_train_target, k=10)
#can see from table it predicted 5 wrong
table(cancer_data_test_target, model_k10)
